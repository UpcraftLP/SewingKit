plugins {
    id 'fabric-loom' version '0.2.5-SNAPSHOT'
    id 'com.github.johnrengelman.shadow' version '5.0.0'
    id 'java-library'
    id 'maven-publish'
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = "com.github.UpcraftLP"
archivesBaseName = "SewingKit"
version = project.mod_version

minecraft {
}


repositories {
    maven {
        name = "Jared"
        url = "https://maven.blamejared.com"
    }
    maven {
        name = "OpenZen"
        url = "https://maven.openzen.org"
    }
}

configurations {
    embed {
        transitive = true
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    implementation("org.openzen.zencode:zencode-javascripting:${project.javascripting_version}") {
        exclude group: 'org.ow2.asm', module: 'asm-debug-all'
    }
    embed("org.openzen.zencode:zencode-javascripting:${project.javascripting_version}") {
        exclude group: 'org.ow2.asm', module: 'asm-debug-all'
    }
}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

shadowJar {
    classifier = "dev"
    configurations = [project.configurations.embed]
}

remapJar {
    dependsOn shadowJar
    input = shadowJar.archivePath
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

tasks.build.dependsOn sourcesJar

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
